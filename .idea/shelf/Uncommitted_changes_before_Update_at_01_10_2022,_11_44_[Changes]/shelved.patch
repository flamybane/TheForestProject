Index: main.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main\n\nimport (\n\t\"TheForestProject/blockchain\"\n\t\"flag\"\n\t\"fmt\"\n\t\"github.com/dgraph-io/badger\"\n\t\"os\"\n\t\"runtime\"\n\t\"strconv\"\n)\n\ntype CommandLine struct {\n\tblockchain *blockchain.BlockChain\n}\n\nfunc (cli *CommandLine) printUsage() {\n\tfmt.Println(\"Usage:\")\n\tfmt.Println(\" add -block BLOCK_DATA - add a block to the chain\")\n\tfmt.Println(\" print - Prints the blocks in the chain\")\n}\n\nfunc (cli *CommandLine) validateArgs() {\n\tif len(os.Args) < 2 {\n\t\tcli.printUsage()\n\t\truntime.Goexit()\n\t}\n}\n\nfunc (cli *CommandLine) addBlock(data string) {\n\tcli.blockchain.AddBlock(data)\n\tfmt.Println(\"Added Block!\")\n}\n\nfunc (cli *CommandLine) printChain() {\n\titer := cli.blockchain.Iterator()\n\n\tfor {\n\t\tblock := iter.Next()\n\n\t\tfmt.Printf(\"Previous hash: %x\\n\", block.PrevHash)\n\t\tfmt.Printf(\"Data: %s\\n\", block.Data)\n\t\tfmt.Printf(\"Hash: %x\\n\", block.Hash)\n\t\tpow := blockchain.NewProof(block)\n\t\tfmt.Printf(\"PoW: %s\\n\", strconv.FormatBool(pow.Validate()))\n\t\tfmt.Println()\n\n\t\tif len(block.PrevHash) == 0 {\n\t\t\tbreak\n\t\t}\n\t}\n}\n\nfunc (cli *CommandLine) run() {\n\tcli.validateArgs()\n\n\taddBlockCmd := flag.NewFlagSet(\"add\", flag.ExitOnError)\n\tprintChainCmd := flag.NewFlagSet(\"print\", flag.ExitOnError)\n\taddBlockData := addBlockCmd.String(\"block\", \"\", \"Block data\")\n\n\tswitch os.Args[1] {\n\tcase \"add\":\n\t\terr := addBlockCmd.Parse(os.Args[2:])\n\t\tblockchain.Handle(err)\n\n\tcase \"print\":\n\t\terr := printChainCmd.Parse(os.Args[2:])\n\t\tblockchain.Handle(err)\n\n\tdefault:\n\t\tcli.printUsage()\n\t\truntime.Goexit()\n\t}\n\n\tif addBlockCmd.Parsed() {\n\t\tif *addBlockData == \"\" {\n\t\t\taddBlockCmd.Usage()\n\t\t\truntime.Goexit()\n\t\t}\n\t\tcli.addBlock(*addBlockData)\n\t}\n\n\tif printChainCmd.Parsed() {\n\t\tcli.printChain()\n\t}\n}\n\nfunc main() {\n\tdefer os.Exit(0)\n\tchain := blockchain.InitBlockChain()\n\n\tdefer func(Database *badger.DB) {\n\t\terr := Database.Close()\n\t\tif err != nil {\n\n\t\t}\n\t}(chain.Database)\n\n\tcli := CommandLine{chain}\n\tcli.run()\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.go b/main.go
--- a/main.go	(revision 197cf79b86212fa6c47d2f9899f42529768f679a)
+++ b/main.go	(date 1664559501740)
@@ -91,9 +91,7 @@
 
 	defer func(Database *badger.DB) {
 		err := Database.Close()
-		if err != nil {
-
-		}
+		blockchain.Handle(err)
 	}(chain.Database)
 
 	cli := CommandLine{chain}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"ALL\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"dbe544e3-e51d-40a7-bdf5-74ce45fd3b78\" name=\"Changes\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/blockchain/blockchain.go\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/blockchain/blockchain.go\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/go.mod\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/go.mod\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/go.sum\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/go.sum\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"GOROOT\" url=\"file:///opt/homebrew/Cellar/go/1.19.1/libexec\" />\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2FShu4pbXTfyF3gLmumznJMMeM2\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"RunOnceActivity.go.format.on.save.advertiser.fired\": \"true\",\n    \"RunOnceActivity.go.formatter.settings.were.checked\": \"true\",\n    \"RunOnceActivity.go.migrated.go.modules.settings\": \"true\",\n    \"RunOnceActivity.go.modules.go.list.on.any.changes.was.set\": \"true\",\n    \"RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed\": \"true\",\n    \"WebServerToolWindowFactoryState\": \"false\",\n    \"configurable..is.expanded\": \"false\",\n    \"configurable.GoLibrariesConfigurable.is.expanded\": \"true\",\n    \"go.import.settings.migrated\": \"true\",\n    \"go.sdk.automatically.set\": \"true\",\n    \"last_opened_file_path\": \"/Users/riddledwithknife\",\n    \"settings.editor.selected.configurable\": \"com.goide.configuration.GoLibrariesConfigurableProvider\"\n  }\n}]]></component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VgoProject\">\n    <settings-migrated>true</settings-migrated>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 197cf79b86212fa6c47d2f9899f42529768f679a)
+++ b/.idea/workspace.xml	(date 1664559513752)
@@ -4,11 +4,9 @@
     <option name="autoReloadType" value="ALL" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="dbe544e3-e51d-40a7-bdf5-74ce45fd3b78" name="Changes" comment="">
+    <list default="true" id="dbe544e3-e51d-40a7-bdf5-74ce45fd3b78" name="Changes" comment="main handle">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/blockchain/blockchain.go" beforeDir="false" afterPath="$PROJECT_DIR$/blockchain/blockchain.go" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/main.go" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -27,24 +25,24 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "RunOnceActivity.go.format.on.save.advertiser.fired": "true",
-    "RunOnceActivity.go.formatter.settings.were.checked": "true",
-    "RunOnceActivity.go.migrated.go.modules.settings": "true",
-    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
-    "RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "configurable..is.expanded": "false",
-    "configurable.GoLibrariesConfigurable.is.expanded": "true",
-    "go.import.settings.migrated": "true",
-    "go.sdk.automatically.set": "true",
-    "last_opened_file_path": "/Users/riddledwithknife",
-    "settings.editor.selected.configurable": "com.goide.configuration.GoLibrariesConfigurableProvider"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.go.format.on.save.advertiser.fired&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;configurable..is.expanded&quot;: &quot;false&quot;,
+    &quot;configurable.GoLibrariesConfigurable.is.expanded&quot;: &quot;true&quot;,
+    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
+    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;/Users/riddledwithknife&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;com.goide.configuration.GoLibrariesConfigurableProvider&quot;
   }
-}]]></component>
+}</component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
@@ -59,6 +57,10 @@
         </entry>
       </map>
     </option>
+  </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="main handle" />
+    <option name="LAST_COMMIT_MESSAGE" value="main handle" />
   </component>
   <component name="VgoProject">
     <settings-migrated>true</settings-migrated>
